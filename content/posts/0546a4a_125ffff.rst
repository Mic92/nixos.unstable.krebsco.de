``stable@2016-06-11`` to ``unstable@2016-07-20``
####################################################
:date: 2016-07-25 14:06
:modified: 2016-07-25 14:06
:author: makefu
:tags: stable-to-unstable

Accidentally updated from stable channel to unstable:
:code:`0546a4a -> 125ffff``

Problems
--------

GPG agent stopped working
~~~~~~~~~~~~~~~~~~~~~~~~~
Seems like in gpg 2.1 write-env-file became obsolete:

.. code-block:: bash

    gpg-agent[14303]: WARNING: "--write-env-file" is an obsolete option - it has no effect`

Solution
````````

.. code-block:: diff

    --- a/makefu/2configs/zsh-user.nix
    +++ b/makefu/2configs/zsh-user.nix
    @@ -22,15 +22,11 @@
    -      # load gpg-agent
    -      envfile="$HOME/.gnupg/gpg-agent.env"
    -      if [ -e "$envfile" ] && kill -0 $(grep GPG_AGENT_INFO "$envfile" | cut -d: -f 2) 2>/dev/null; then
    -        eval "$(cat "$envfile")"
    -      else
    -        eval "$(${pkgs.gnupg}/bin/gpg-agent --daemon --enable-ssh-support --write-env-file "$envfile")"
    -      fi
    -      export GPG_AGENT_INFO
    -      export SSH_AUTH_SOCK
    +      ${pkgs.gnupg}/bin/gpg-connect-agent updatestartuptty /bye >/dev/null
    +      GPG_TTY=$(tty)
    +      export GPG_TTY
    +      unset SSH_AGENT_PID
    +      export SSH_AUTH_SOCK="/run/user/$UID/gnupg/S.gpg-agent.ssh"
          '';

Touchpad enabled on X220 but in retard mode
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
I use the trackpoint instead, before it was disabled by default.

Solution
````````

.. code-block:: diff

    --- a/makefu/2configs/hw/tp-x2x0.nix
    +++ b/makefu/2configs/hw/tp-x2x0.nix
    @@ -12,6 +12,12 @@
    +  # enable synaptics so we can easily disable the touchpad
    +  #   enable the touchpad with `synclient TouchpadOff=0`
    +  services.xserver.synaptics = {
    +    enable = true;
    +    additionalOptions = ''Option "TouchpadOff" "1"'';
    +  };

Devpi stopped building
~~~~~~~~~~~~~~~~~~~~~~
Tests are activated by default for python packages. For some reason my devpi
package contains failing tests, too lazy to investigate.

Workaround
``````````

.. code-block:: diff

    --- a/makefu/5pkgs/devpi/default.nix
    +++ b/makefu/5pkgs/devpi/default.nix
    @@ -8,7 +8,7 @@ let
          url = "https://pypi.python.org/packages/source/e/execnet/${name}.tar.gz";
          sha256 = "1rpk1vyclhg911p3hql0m0nrpq7q7mysxnaaw6vs29cpa6kx8vgn";
        };
    -
    +    doCheck = false;

Deprecated nixpkgs options
~~~~~~~~~~~~~~~~~~~~~~~~~~

``services.xserver.vaapiDrivers`` became ``hardware.opengl.extraPackages``,
``nix.useChroot`` became ``nix.useSandbox``.

.. code-block:: diff

    --- a/makefu/2configs/default.nix
    +++ b/makefu/2configs/default.nix
    @@ -66,7 +66,7 @@
    -  nix.useChroot = true;
    +  nix.useSandbox = true;
    --- a/makefu/2configs/hw/tp-x220.nix
    +++ b/makefu/2configs/hw/tp-x220.nix
    @@ -8,10 +8,9 @@
    -
    +  hardware.opengl.extraPackages =  [ pkgs.vaapiIntel pkgs.vaapiVdpau ];
      services.xserver = {
        videoDriver = "intel";
    -    vaapiDrivers = [ pkgs.vaapiIntel pkgs.vaapiVdpau ];


Xorg takes 10 seconds to boot
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
I do not boot too often, will have this solved via enterprise-waiting.

Solved with update
------------------
Some things actually get solved with the new rev:

- chromium does not use up all 4 CPUs when showing videos
- nixos module `security.acme <https://github.com/NixOS/nixpkgs/blob/master/nixos/modules/security/acme.nix#L117>`_ provides :code:`preliminarySelfsigned` for automated ssl certificate creation
